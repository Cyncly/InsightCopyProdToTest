
Param(
	[string]$Config		# subdirectory containing config file and custom SQL Scripts
	,[string]$Logfile		# Name of the Logfile to be sent.
	);

################### main #################
Set-Location $PSHOME
$ScriptFullPath = Split-Path $MyInvocation.MyCommand.Path
$BasePath = Split-Path -Path $ScriptFullPath
$FunctionsScript= $ScriptFullPath + "\functions.ps1"
. $FunctionsScript

Import-SQLServerModule

# Check config subdirectory
$Configdir=$BasePath + "\" + $Config
if ( Test-Path $Configdir ){
	# OK!
} else {
	Write-msg -Message "Directory $Configdir not found!" -Severity ERROR
	exit 1
}
# Check config file:
$Configfile=$Configdir + "\config.ps1"
if ( Test-Path $Configfile ){
	# OK!
} else {
	Write-msg -Message "File $Configfile not found!" -Severity ERROR
	exit 1
}


# Read config file:
. $Configfile

if ( $UseSMTPSettingFromSourceDB ) {
	$Query="SELECT setValue FROM dbo.Settings WHERE setCategory='inResponse' AND setSubCategory='Email' AND setName='SMTPHost' "
	$result=Invoke-Sqlcmd -ServerInstance $SourceServer -Database $SourceInsightDB -Query $Query
	$SMTPSetting=$result[0]
	if ( $SMTPSetting.Length -gt 0 ) {
		$HostAndPort=$SMTPSetting.split(";")[0]
		$SMTPHost=$HostAndPort.split(":")[0]
		$SMTPPort=$HostAndPort.split(":")[1]
		if ( !$SMTPPort ) { $SMTPPort="25" }
		$UserAndPassword=$SMTPSetting.split(";")[1]
		if ( $UserAndPassword ) {
			$SMTPUsername=$UserAndPassword.split(":")[0]
			$SMTPPassword=$UserAndPassword.split(":")[1]
		}
		$SSL=$SMTPSetting.split(";")[2]
		if ( $SSL -eq "SSL" ) {
			$SMTPUseSSL=$true
		}
	}
}

if ( $SMTPHost.Length -gt 0 -and $SMTPmailTo.Length -gt 0 ){
	$msg = new-object Net.Mail.MailMessage 
	$smtp = new-object Net.Mail.SmtpClient($SMTPHost) 
	$smtp.Port = $SMTPPort
	if ( $SMTPUsername.Length -gt 0 ){
		$smtp.Credentials = New-Object System.Net.NetworkCredential($SMTPUsername, $SMTPPassword)
	}
	# SSL true/false
	$smtp.EnableSsl = $SMTPUseSSL
	$msg.From = $SMTPMailFrom
	$msg.replyto = $SMTPMailFrom
	$msg.To.Add($SMTPmailTo)
	$msg.Subject = "CopyProdToTest " + $Config + " Completed"
	$msg.Body = "This email was generated by the CopyProdToTest script."
	$msg.Body +="`r`n  Configration:     $Config"
	$msg.Body +="`r`n  Server name:      ${env:COMPUTERNAME}"
	$msg.Body +="`r`n  Script Location:  $ScriptFullPath"
	$msg.Body +="`r`n  Logfile:  $Logfile"
	$msg.Body +="`r`nSee logfile attached."
	$att = new-object Net.Mail.Attachment($Logfile)
	$msg.Attachments.Add($att)
	$smtp.Send($msg)
} else {
	Write-Msg -Message "Parameter SMTPHost or SMTPmailTo not set. No Email will be sent."
}

